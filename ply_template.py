#!/usr/bin/env python2.5
#      -*-mode: python -*-    -*- coding: utf-8 -*-
'Generated by ply_out.py'

import re

import ply.yacc
import ply.lex

import AST
import plugin
import error

tokens = []

reserved = {}

# GENERATED LEX CODE BEGINS HERE
# GENERATED LEX CODE ENDS HERE

tokens.extend(reserved.values())


def t_ID(t):
   r'[a-zA-Z_][a-zA-Z_0-9]*'
   t.type = reserved.get(t.value,'ID')
   return t

def t_COMMENT(t):
   r'\#.*'
   pass
   # No return value. Token discarded

# Define a rule so we can track line numbers
def t_newline(t):
    r'\n+'
    t.lexer.lineno += len(t.value)

# A string containing ignored characters (spaces and tabs)
t_ignore  = ' 	'

# Error handling rule
def t_error(t):
    print "Illegal character '%s'" % t.value[0]
    t.lexer.skip(1)

# Build the lexer
lexer = ply.lex.lex(debug=0)

# GENERATED YACC CODE BEGINS HERE
# GENERATED YACC CODE ENDS HERE

# trailing stuff.
